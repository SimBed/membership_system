<%= form_with url: verify_payment_path(purchase_type: 'membership'), method: :post, local: true, id: "payment-form-product#{product.id}" do |form| %>
  <%= form.hidden_field :amount, value: @renewal.price(product) * 100 %> <!-- Amount in paise -->
  <%= form.hidden_field :order_id %> <!-- This will be filled dynamically -->
  <%= form.hidden_field :razorpay_payment_id %>
  <%= form.hidden_field :razorpay_signature %>
  <%= form.hidden_field :product_id, value: product.id %>
  <%= form.hidden_field :price_id, value: @renewal.base_price(product)&.id %>
  <%= form.hidden_field :price, value: @renewal.price(product) %>
  <%# <%= form.hidden_field :renewal_discount_id, value: @renewal.discount_hash[:renewal]&.id %>
  <%# <%= form.hidden_field :status_discount_id, value: @renewal.discount_hash[:status]&.id %>
  <%# <%= form.hidden_field :oneoff_discount_id, value: @renewal.discount_hash[:oneoff]&.id %>
  <%= form.hidden_field :discount_id, value: @renewal.best_discount&.id %>  
  <%= form.hidden_field :account_id, value: current_account.id %>
  <%= form.hidden_field :client_ui, value: "shop page" %>
  <%= form.submit 'Pay Now', id: "rzp-button-product#{product.id}", class: 'razorpay-payment-button' %>  
<% end %>

<script>
  // want payment button in accordion div but dont want clicking payment button to expand accordion
  <%= "payment_button#{product.id}"%> = document.getElementById("<%= "rzp-button-product#{product.id}" %>")
  <%= "payment_button#{product.id}"%>.addEventListener('mouseenter', (event) => {
    let accordionButton = <%= "payment_button#{product.id}"%>.parentElement.parentElement.parentElement.parentElement;
    accordionButton.setAttribute('data-bs-toggle', '');
  });
  <%= "payment_button#{product.id}"%>.addEventListener('mouseleave', (event) => {
    let accordionButton = <%= "payment_button#{product.id}"%>.parentElement.parentElement.parentElement.parentElement;
    accordionButton.setAttribute('data-bs-toggle', 'collapse');
  });
  <%= "payment_button#{product.id}"%>.onclick = function(e){
    // interrupt the submission of the payment form to first create a Razorpay order and populate the payment from with associated ids 
    e.preventDefault();

    fetch('<%= orders_path %>', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': '<%= form_authenticity_token %>'
      },
      body: JSON.stringify({ amount: document.getElementById('<%= "payment-form-product#{product.id}" %>').querySelector('[name="amount"]').value })
    })
    .then(response => response.json())
    .then(data => {
      if (data.order_id == null) throw new Error(data.error_message);
      // console.log (data.order_id)
      document.getElementById("<%= "payment-form-product#{product.id}" %>").querySelector('[name="order_id"]').value = data.order_id;

      var options = {
        "key": "<%= Rails.configuration.razorpay[:key_id] %>",
        "amount": data.amount,
        "currency": "INR",
        "name": "The Space",
        "description": "<%= "#{product.name(verbose: true)}" %>",
        "order_id": data.order_id,
        "handler": function (response){
          document.getElementById("<%= "payment-form-product#{product.id}" %>").querySelector('[name="razorpay_payment_id"]').value = response.razorpay_payment_id;
          document.getElementById("<%= "payment-form-product#{product.id}" %>").querySelector('[name="razorpay_signature"]').value = response.razorpay_signature;
          // once razorpay authrorisation response is received and id items added to the payment form, continue with the previously interrupted submission of the payment form
          document.getElementById("<%= "payment-form-product#{product.id}" %>").submit();
        },
        "prefill": {
          "name": "<%= current_account.client.name %>",
          "email": "<%= current_account.email %>",
          "contact": "<%= decorate(current_account.client).number %>"
        }
      };
      var rzp1 = new Razorpay(options);
      rzp1.open();
    })
    //.catch(error => console.error('Error:', error));
    .catch((error) => {
      // console.error('Error:', error);
      alert(error)});
  }

</script>