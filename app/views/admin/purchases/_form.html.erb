

<%#= https://stackoverflow.com/questions/48197245/form-for-vs-form-with-in-rails-5-with-namespace
prior to introduction of the admin folder structure/namespace the named route for the url "/purchases" was purchases_path
With the admin namespace, the required url is "/admin/purchase" with named route admin_purchases_path.
I don't see it in the documentation for form_with but the array syntax [:admin, purchase] as the model argument achieves this %>
<%= form_with(model: [:admin, purchase]) do |form| %>
  <% if purchase.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(purchase.errors.count, "error") %> prohibited this purchase from being saved:</h2>

      <ul>
        <% purchase.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :client_id %>
    <%#= form.select :client_id, @clients, include_blank: true %>
    <%= form.collection_select :client_id, @clients, :id, :name, include_blank: true %>
  </div>

  <!--div class="field">
    <%#= form.label :product_id %>
    <%#= form.select :product_id, @products, { include_blank: true },{ data: {
    remote: true,
    url: '/products/payment',
    method: 'get'
  }} %>
  </div-->

  <div class="field">
    <%= form.label :product_id, 'Product' %>
    <%= form.collection_select :product_id, @products, :id, :name, include_blank: true %>
  </div>

  <div class="field">
    <%= form.label :price_id, 'Price' %>
    <%= form.grouped_collection_select :price_id, @products, :prices, :name, :id, :name, include_blank: true %>
  </div>

  <div class="field">
    <%= form.label :payment %>
    <%= form.number_field :payment, readonly: true %>
  </div>

  <div class="field">
    <%= form.label :dop, 'Date of purchase' %>
    <%= form.date_select :dop %>
  </div>

  <div class="field">
    <%= form.label :payment_mode %>
    <%= form.select :payment_mode, options_for_select(@payment_methods, @purchase.payment_mode), include_blank: true %>
  </div>

  <div class="field">
    <%= form.label :invoice %>
    <%= form.text_field :invoice %>
  </div>

  <div class="field">
    <%= form.label :note %>
    <%= form.text_area :note, cols: 40, rows: 5 %>
  </div>

  <% unless @purchase.new_record? %>
  <div class="field" id="ar">
    <%= form.label :adjust_restart %>
    <%= form.check_box :adjust_restart, onclick: "toggleHide()" %>
  </div>

  <%# class arvalue is for identification with javascript, not for styling %>
  <div id="ar_payment" class="field ar <%= 'ar_hide' unless @purchase.adjust_restart %>">
    <%= form.label :ar_payment %>
    <%= form.number_field :ar_payment, class: "arvalue" %>
  </div>

  <div class="field ar <%= 'ar_hide' unless @purchase.adjust_restart %>">
    <%= form.label :ar_date %>
    <%= form.date_select :ar_date, {include_blank: true, selected: @purchase.ar_date || Time.zone.today}, {class: "arvalue"} %>
  </div>
  <% end %>

  <div class="actions">
    <%= form.submit @purchase.new_record? ? 'Log Purchase' : 'Update Purchase'  %>
  </div>
<% end %>

<%= javascript_pack_tag 'purchase/payment_method' %>

<script>
  function toggleHide() {
    var currentState = 'hidden';
    if (document.getElementById("ar_payment").classList.contains("ar_hide")) {
        currentState = 'visible';
      }
      var x = document.getElementsByClassName("ar");
      var i;
      for (i = 0; i < x.length; i++) {
        x[i].classList.toggle('ar_hide')
      }
      if (currentState == 'hidden') {
        var x = document.getElementsByClassName("arvalue");
        var i;
        for (i = 0; i < x.length; i++) {
          x[i].value="";
        }
      }
    }
</script>
